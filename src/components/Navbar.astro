---
const { t } = Astro.props;
const menu = t.navbar;
---

<section class="relative mx-auto">
    <!-- navbar -->
    <nav class="fixed top-0 left-0 right-0 z-50 flex justify-between bg-gray-900 text-white w-screen h-24 lg:px-16 xl:px-24">
  <div class="px-5 xl:px-12 flex items-center h-full w-full">
    <a href="#" class="flex items-center h-full">
      <img src="images/logo.png" alt="logo" class="h-28 object-contain scale-110">



    <!-- <nav class="fixed top-0 left-0 right-0 z-50 flex justify-between mx-auto bg-gray-900 text-white w-screen">
        <div class="px-5 xl:px-12 py-5 flex w-full items-center">
          <a class="text-3xl font-bold font-heading" href="#">
            <img class="h-12 object-contain" src="images/logo.png" alt="logo"> -->
            <!-- BluePlanet. -->
          </a>

          <div class="hidden md:flex items-center space-x-8 ml-auto">
            <!-- Nav Links -->
            <ul class="hidden md:flex px-4 mx-auto font-semibold font-heading space-x-12">
              {menu.map((item : any) => (
                <li><a class="hover:text-accent" href={item.path} class="block py-2 hover:text-accent">
                  {item.name}
                </a></li>
              ))}
            </ul>
            <!-- Language Dropdown -->
            <div class="relative hidden xl:flex items-center space-x-5">
                <button id="langDropdownBtn" class="flex items-center hover:text-gray-200 focus:outline-none">
                  <img src="svg/en.svg" alt="English Flag" class="w-6 h-6">
                  <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  </svg>
              </button>

              <!-- Dropdown menu -->
              <div id="langDropdown" class="absolute right-0 mt-40 w-32 bg-white rounded-md shadow-lg z-50 hidden">

                <ul class="py-1 text-gray-700">
                  <li>
                    <a href="#" data-lang="en" class="flex items-center px-4 py-2 hover:bg-gray-100 hover:text-accent">
                      <img src="svg/en.svg" alt="English" class="w-5 h-5 mr-2"> English
                    </a>
                  </li>
                  <li>
                    <a href="#" data-lang="es" class="flex items-center px-4 py-2 hover:bg-gray-100 hover:text-accent">
                      <img src="svg/es.svg" alt="Español" class="w-5 h-5 mr-2"> Español
                    </a>
                  </li>
                  <li>
                    <a href="#" data-lang="fr" class="flex items-center px-4 py-2 hover:bg-gray-100 hover:text-accent">
                      <img src="svg/fr.svg" alt="Français" class="w-5 h-5 mr-2"> Français
                    </a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
          
        </div>
        <!-- Mobile Language Dropdown -->
      <div class="relative flex xl:hidden mr-6 items-center">
        <button id="langDropdownBtnMobile" class="flex items-center hover:text-gray-200 focus:outline-none">
          <img src="svg/en.svg" alt="English Flag" class="w-6 h-6">
          <svg class="w-9 h-9 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </button>

        <div id="langDropdownMobile" class="absolute -left-20 mt-40 w-32 bg-white rounded-md shadow-lg z-50 hidden">
          <ul class="py-1 text-gray-700">
            <li>
              <a href="#" data-lang="en" class="flex items-center px-4 py-2 hover:bg-gray-100">
                <img src="svg/en.svg" alt="English" class="w-5 h-5 mr-2"> English
              </a>
            </li>
            <li>
              <a href="#" data-lang="es" class="flex items-center px-4 py-2 hover:bg-gray-100">
                <img src="svg/es.svg" alt="Español" class="w-5 h-5 mr-2"> Español
              </a>
            </li>
            <li>
              <a href="#" data-lang="fr" class="flex items-center px-4 py-2 hover:bg-gray-100">
                <img src="svg/fr.svg" alt="Français" class="w-5 h-5 mr-2"> Français
              </a>
            </li>
          </ul>
        </div>
      </div>
        
      <!-- Hamburger button -->
      <button id="hamburger-btn" class="navbar-burger self-center mr-12 md:hidden">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path id="hamburger-icon" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </nav>

    <!-- Mobile menu -->
    <div id="mobile-menu" class="hidden bg-primary fixed top-20 left-0 right-0 z-40 max-h-[calc(100vh-5rem)] overflow-y-auto py-2 px-4 font-semibold text-white space-y-2 md:hidden">
      {menu.map((item : any) => (
        <a href={item.path} class="block py-2 text-right mr-3 hover:text-accent">
          {item.name}
        </a>
      ))}
    </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
  const setupLangDropdown = (
    btnId: string,
    menuId: string
  ): void => {
    setInitialLangFlag();
    const langBtn = document.getElementById(btnId) as HTMLButtonElement | null;
    const langMenu = document.getElementById(menuId) as HTMLDivElement | null;

    if (!langBtn || !langMenu) return;

    langBtn.addEventListener("click", () => {
      langMenu.classList.toggle("hidden");
    });

    window.addEventListener("click", (e: MouseEvent) => {
      if (!(e.target instanceof Node)) return;
      if (!langBtn.contains(e.target) && !langMenu.contains(e.target)) {
        langMenu.classList.add("hidden");
      }
    });

    const links = langMenu.querySelectorAll<HTMLAnchorElement>("a[data-lang]");
    links.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault();

        const selectedLang = link.dataset.lang;
        const flagImg = link.querySelector("img")?.getAttribute("src");

        if (selectedLang && flagImg) {
          const imgElement = langBtn.querySelector("img");
          if (imgElement) {
            imgElement.setAttribute("src", flagImg);
          }

          localStorage.setItem("selectedLang", selectedLang);
          window.location.href = `/${selectedLang}`;
          langMenu.classList.add("hidden");
          }
        });
      });
    };

    // Aplica lógica a escritorio y mobile
    setupLangDropdown("langDropdownBtn", "langDropdown");
    setupLangDropdown("langDropdownBtnMobile", "langDropdownMobile");
  });

const btn = document.getElementById("hamburger-btn") as HTMLButtonElement;
  const menu = document.getElementById("mobile-menu") as HTMLDivElement;
  const icon = document.getElementById("hamburger-icon") as unknown as SVGPathElement;

  btn?.addEventListener("click", () => {
    menu.classList.toggle("hidden");
    const isOpen = !menu.classList.contains("hidden");

    icon.setAttribute(
      "d",
      isOpen ? "M6 18L18 6M6 6l12 12" : "M4 6h16M4 12h16M4 18h16"
    );
  });

  const menuLinks = menu.querySelectorAll("a");
menuLinks.forEach((link) => {
  link.addEventListener("click", () => {
    menu.classList.add("hidden");

    icon.setAttribute("d", "M4 6h16M4 12h16M4 18h16");
  });
});

  //Cambiar bandera cuando redirecciona, segun el lenguage seleccionado
 const setInitialLangFlag = (): void => {
  const pathLang = window.location.pathname.split('/')[1]; // "/fr" → "fr"
  const imgLangMap: Record<string, string> = {
    en: 'svg/en.svg',
    es: 'svg/es.svg',
    fr: 'svg/fr.svg',
  };

  const langBtns = document.querySelectorAll<HTMLButtonElement>('#langDropdownBtn, #langDropdownBtnMobile');

  langBtns.forEach((btn) => {
    const img = btn.querySelector('img');
    if (img && imgLangMap[pathLang]) {
      img.setAttribute('src', imgLangMap[pathLang]);
    }
  });
};

</script>