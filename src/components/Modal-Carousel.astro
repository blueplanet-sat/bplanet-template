---
interface ImageItem {
  path: string;
  alt: string;
  title: string;
}

const { t } = Astro.props;

let images: ImageItem[] = [];

t.carousel.images.forEach((element: any) => {
    images.push({
        path: element.path,
        alt: element.alt,
        title: element.title,
    });
}); 
---

<!-- Portfolio Modal -->
<div id="portfolio-modal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm z-50 hidden opacity-0 transition-opacity duration-300">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div id="modal-content" class="bg-white rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden shadow-2xl transform scale-95 transition-transform duration-300">
      <!-- Modal Header -->
      <div class="flex items-center justify-between p-6 border-b border-gray-200">
        <div>
          <h2 class="text-2xl font-bold text-gray-900">Image Gallery</h2>
          <p class="text-gray-600 mt-1">Explore our recent satellite imagery projects</p>
        </div>
        <button id="close-modal-btn" class="p-2 hover:bg-gray-100 rounded-full transition-colors duration-200">
          <svg class="w-6 h-6 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <!-- Modal Body -->
      <div class="p-6 overflow-y-auto max-h-[calc(90vh-120px)]">
        

        <!-- Portfolio Grid -->
        <!-- <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {portfolioProjects.map((project, index) => (
            <div class="portfolio-item bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-100 hover:-translate-y-1" data-category={project.category}>
              
              <div class="relative overflow-hidden h-48 bg-gradient-to-br from-blue-500 to-purple-600">
                <img 
                  src={project.image || "/placeholder.svg"} 
                  alt={project.title}
                  class="w-full h-full object-cover hover:scale-110 transition-transform duration-500"
                />
                <div class="absolute top-3 left-3">
                  <span class="px-2 py-1 bg-white/90 backdrop-blur-sm text-blue-600 text-xs font-semibold rounded-full">
                    {project.year}
                  </span>
                </div>
                <div class="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent"></div>
              </div>

              
              <div class="p-5">
                <div class="flex items-center justify-between mb-2">
                  <span class="text-xs font-medium text-blue-600 bg-blue-50 px-2 py-1 rounded-full">
                    {project.category}
                  </span>
                </div>
                <h3 class="text-lg font-bold text-gray-900 mb-2 line-clamp-2">
                  {project.title}
                </h3>
                <p class="text-gray-600 text-sm mb-3 line-clamp-3">
                  {project.description}
                </p>
                <div class="flex items-center justify-between">
                  <span class="text-xs text-gray-500">
                    Client: {project.client}
                  </span>
                  <button class="text-blue-600 hover:text-blue-700 text-sm font-medium">
                    View Details →
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div> -->
        <div class=" w-full flex flex-col items-center" data-aos="zoom-out-up" data-aos-duration="500">
            <div class="relative w-full max-w-4xl aspect-video overflow-hidden">
                <!-- Slides -->
                <div id="carousel"
                     class="flex h-full transition-transform duration-700 ease-in-out"
                >
                    {images.map((image) => (
                        <div class="w-full flex-shrink-0 relative transition-all duration-500">
                        <img
                            src={image.path}
                            alt={image.alt}
                            class="w-full h-full object-cover rounded-2xl border border-blue-900"
                        />
                        <h3 class="absolute bottom-6 left-4 text-white bg-black/50 px-3 py-1 rounded-md backdrop-blur-sm">
                            {image.title}
                        </h3>
                        </div>
                    ))}
                </div>

                <!-- Prev -->
                <button
                    id="prev"
                    aria-label="Anterior"
                    class="absolute top-1/2 left-4 -translate-y-1/2 bg-blue-800 hover:bg-blue-700 text-white p-2 rounded-full shadow z-20"
                >
                &#10094;
                </button>
                <!-- Next -->
                <button
                    id="next"
                    aria-label="Siguiente"
                    class="absolute top-1/2 right-4 -translate-y-1/2 bg-blue-800 hover:bg-blue-700 text-white p-2 rounded-full shadow z-20"
                >
                &#10095;
                </button>
            </div>  
        </div>
        

        <!-- Modal Footer -->
        <div class="mt-8 text-center">
          <p class="text-gray-600 mb-4">Interested in working with us on your next project?</p>
          <button class="bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold py-3 px-8 rounded-lg hover:from-blue-700 hover:to-purple-700 transition-all duration-300">
            Contact Us
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('portfolio-modal');
    const modalContent = document.getElementById('modal-content');
    const closeModalBtn = document.getElementById('close-modal-btn');
    const filterBtns = document.querySelectorAll('.portfolio-filter-btn');
    const portfolioItems = document.querySelectorAll('.portfolio-item');

    // Expose modal functions globally so they can be called from parent component
    window.portfolioModal = {
      open: function() {
        modal.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
        setTimeout(function() {
          modal.classList.remove('opacity-0');
          modalContent.classList.remove('scale-95');
          modalContent.classList.add('scale-100');
        }, 10);
      },
      
      close: function() {
        modal.classList.add('opacity-0');
        modalContent.classList.remove('scale-100');
        modalContent.classList.add('scale-95');
        setTimeout(function() {
          modal.classList.add('hidden');
          document.body.style.overflow = '';
        }, 300);
      }
    };

    function filterProjects(category) {
      portfolioItems.forEach(function(item) {
        if (category === 'all' || item.dataset.category === category) {
          item.style.display = 'block';
          setTimeout(function() {
            item.style.opacity = '1';
            item.style.transform = 'translateY(0)';
          }, 10);
        } else {
          item.style.opacity = '0';
          item.style.transform = 'translateY(20px)';
          setTimeout(function() {
            item.style.display = 'none';
          }, 300);
        }
      });
    }

    // Modal event listeners
    closeModalBtn.addEventListener('click', window.portfolioModal.close);

    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        window.portfolioModal.close();
      }
    });

    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
        window.portfolioModal.close();
      }
    });

    // Filter functionality
    filterBtns.forEach(function(btn) {
      btn.addEventListener('click', function() {
        const filter = this.dataset.filter;
        
        // Update active button
        filterBtns.forEach(function(b) {
          b.classList.remove('active', 'bg-blue-600', 'text-white');
          b.classList.add('bg-gray-100', 'text-gray-700');
        });
        
        this.classList.add('active', 'bg-blue-600', 'text-white');
        this.classList.remove('bg-gray-100', 'text-gray-700');
        
        // Filter projects
        filterProjects(filter);
      });
    });

    const carousel = document.getElementById('carousel');
    const slides   = carousel.querySelectorAll('div'); // <-- declaramos "slides"
    const nextBtn  = document.getElementById('next');
    const prevBtn  = document.getElementById('prev');

    // 2) Estado
    let currentIndex = 0;
    const total      = slides.length;                // número de slides

    // 3) Función de actualización
    function update() {
      // mover el carrusel
      carousel.style.transform = `translateX(-${currentIndex * 100}%)`;

      // opcional: controlar opacidad y escala
      slides.forEach((slide, i) => {
        if (i === currentIndex) {
          slide.classList.add('opacity-100', 'scale-100');
          slide.classList.remove('opacity-50', 'scale-90');
        } else {
          slide.classList.add('opacity-50', 'scale-90');
          slide.classList.remove('opacity-100', 'scale-100');
        }
      });
    }

    // 4) Event listeners
    nextBtn.addEventListener('click', () => {
      currentIndex = (currentIndex + 1) % total;
      update();
    });

    prevBtn.addEventListener('click', () => {
      currentIndex = (currentIndex - 1 + total) % total;
      update();
    });

    // 5) Primera llamada para pintar el estado inicial
    update();
  });
</script>