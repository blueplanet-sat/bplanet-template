---
const { t } = Astro.props;
const heroTitle = t.hero.title;
---

<div
  class="sm:pt-24 pt-12 relative isolate overflow-hidden bg-gray-900 min-h-screen flex items-center"
>
  <div
    class="absolute top-0 left-0 w-full h-6 bg-gradient-to-t from-transparent to-gray-900 pointer-events-none z-10"
  >
  </div>
  <div class="parallax-wrapper absolute inset-0 -z-10 overflow-hidden">
    <div class="parallax-inner">
      <video
        autoplay
        muted
        loop
        playsinline
        preload="none"
        src="videos/planet-in-your-hands.mp4"
        class="w-full h-full pt-72 sm:pt-0 object-cover object-[center_30%] opacity-30"
      ></video>
    </div>
  </div>

  <div
    class="mx-auto max-w-7xl px-6 lg:px-8 sm:translate-y-0 transition-all duration-300"
  >
    <div class="mx-auto max-w-2xl lg:mx-0">
      <h1
        class="typewriter-js text-6xl font-sans font-semibold tracking-tight text-white sm:text-8xl"
      >
        <span id="typewriter" data-title={heroTitle}></span><span class="caret"
          >|</span
        >
      </h1>
      <p
        class="animate-slide-in-right mt-8 text-2xl font-medium text-pretty text-gray-300 sm:text-3xl"
      >
        <span set:html={t.hero.subtitle} />
      </p>
    </div>
    <!-- <a href="#vision"
      ><button
        class="animate-slide-in-left mt-8 text-white uppercase py-3 sm:py-4 px-6 sm:px-8 md:px-10 text-sm md:text-base font-medium border border-white transition-all duration-300 bg-white/10 hover:bg-white hover:text-black"
      >
        {t.hero.buttonText}
        <span class="ml-2" aria-hidden="true">&rarr;</span>
      </button></a
    > -->
  </div>

  <!-- <div
    class="absolute bottom-0 left-0 w-full h-24 bg-gradient-to-b from-navyDark to-gray-900 pointer-events-none z-10"
  >
  </div> -->
</div>

<script type="module">
  window.addEventListener("DOMContentLoaded", () => {
    document
      .querySelectorAll(".fade-on-load")
      .forEach((el) => el.classList.replace("opacity-0", "opacity-100"));
    // Efecto máquina de escribir con saltos de línea
    const el = document.getElementById("typewriter");
    const caret = document.querySelector(".caret");
    const heroTitle = el.dataset.title;
    // El texto puede contener <br> para saltos de línea
    const text = `${heroTitle}`.replace(/\\n/g, "<br>");
    let i = 0;
    function type() {
      if (i <= text.length) {
        el.innerHTML = text.slice(0, i);
        i++;
        setTimeout(type, 50);
      } else {
        caret.style.display = "none";
      }
    }
    type();
    // Fade on load para otros elementos
    document
      .querySelectorAll(".fade-on-load")
      .forEach((el) => el.classList.replace("opacity-0", "opacity-100"));
  });

  window.addEventListener("scroll", () => {
    const scrollTop = window.scrollY;
    const parallax = document.querySelector(".parallax-inner");
    const speed = 0.4;

    if (parallax) {
      parallax.style.transform = `translateY(${scrollTop * speed}px)`;
    }
  });
</script>
